
<style>
    .fixed-column {
        position: sticky;
        left: 0;
        background-color: white;
        z-index: 1;
        box-shadow: 1px 0 0 #ccc;
    }

    .gantt-progress-cell {
        position: relative;
        height: 40px;
        padding: 0;
        overflow: visible;
    }

    .gantt-bar {
        position: absolute;
        height: 15px;
        background-color: #2196F3;
        border-radius: 4px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 2;
    }

    .gantt-timeline {
        display: flex;
        white-space: nowrap;
        border-bottom: 1px solid #ccc;
        margin-bottom: 4px;
        position: relative;
        height: 24px;
    }

    .gantt-scale-unit {
        width: 30px;
        text-align: center;
        font-size: 0.75rem;
        float: left;
        height: 24px;
        position: relative;
    }

    .weekend-line {
        position: absolute;
        left: 50%;
        top: 0;
        bottom: 0;
        width: 1px;
        background-color: red;
        z-index: 1;
    }
    /* Meses como encabezados (solo para mostrar texto, sin afectar diseño) */
    .month-header {
        background-color: transparent !important;
        text-align: center;
        font-weight: bold;
        font-size: 12px;
        padding: 4px 2px;
        border-left: 1px solid #ccc;
        width: 80px !important;
        min-width: 80px !important;
        max-width: 80px !important;
        white-space: normal;
        word-wrap: break-word;
        color: transparent;
        border: none !important;
        visibility: hidden;
        position: relative;
    }

        .month-header::before {
            content: attr(data-label);
            display: block;
            color: #555;
            text-align: center;
            font-weight: bold;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            white-space: normal;
            word-wrap: break-word;
            visibility: visible;
        }

    .gantt-task-bar {
        position: absolute;
        top: 10px;
        height: 20px;
        background-color: #2196F3;
        border-radius: 4px;
        left: 0;
        width: 100%;
        cursor: pointer;
    }

    /* Tooltip sobre las barras */
    .tooltip-gantt {
        visibility: hidden;
        width: max-content;
        min-width: 150px;
        background: #333;
        color: #fff;
        text-align: center;
        border-radius: 4px;
        padding: 4px 8px;
        position: absolute;
        z-index: 10;
        bottom: 125%; /* Aparece arriba */
        left: 50%;
        margin-left: -75px;
        opacity: 0;
        transition: opacity 0.3s;
        font-size: 12px;
        white-space: nowrap;
    }

    .gantt-task-bar:hover .tooltip-gantt {
        visibility: visible;
        opacity: 1;
    }
</style>


<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    <div style="position: sticky; top: 0; z-index: 1100; background: white; box-shadow: 0px 2px 4px -1px rgba(0,0,0,0.2);width:100%;">
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            <MudStack Row=true Spacing="2">
                <IconButton ToolTip="@LegendAdd" Size="@Size.Small" Icon="@Icons.Material.Outlined.Add"
                            OnClick="AddRow" />
                <IconButton ToolTip="@($"Move down to {SelectedRowName}")" Size="@Size.Small" Disabled=@(DisableButtonCanMoveDown())
                            Icon="@Icons.Material.Outlined.ArrowDownward" OnClick="()=>MoveDown()" />

                <IconButton ToolTip="@($"Move up to {SelectedRowName}")" Size="@Size.Small" Disabled=@(DisableButtonCanMoveUp())
                            Icon="@Icons.Material.Outlined.ArrowUpward" OnClick="()=>MoveUp()" />

                <IconButton ToolTip="@($"Move left to {SelectedRowName}")" Size="@Size.Small" Disabled=@(DisableButtonCanMoveLeft())
                            Icon="@Icons.Material.Outlined.ArrowLeft" OnClick="()=>MoveLeft()" />

                <IconButton ToolTip="@($"Move Rigth to {SelectedRowName}")" Size="@Size.Small" Disabled=@(DisableButtonCanMoveRight())
                            Icon="@Icons.Material.Outlined.ArrowRight" OnClick="()=>MoveRight()" />

                <MudSpacer />
                <Field Label="Selected row">@SelectedRowName</Field>

            </MudStack>
        </MudContainer>
    </div>


    <!-- Contenedor general con scroll único -->
    <div style="overflow-x: auto; width: 100%;overflow-y: auto;">
        @if (loaded)
        {
            <MudSimpleTable Dense="true" Hover="true" Bordered="true" Striped="true"
                            Style="overflow-y: auto;min-width: 1200px; width: max-content;" FixedHeader=true>
                <thead>
                    <tr>
                        <th class="fixed-column" style="width: 50px;">ID</th>
                        <th class="fixed-column" style="width: 80px;">WBS</th>
                        <th class="fixed-column" style="width: 300px;">Name</th>
                        <th class="fixed-column" style="width: 120px;">Start Date</th>
                        <th class="fixed-column" style="width: 120px;">End Date</th>
                        <th style="width: 80px;">Duration</th>
                        <th style="width: 100px;">Dependencies</th>
                        <th style="width: 80px;">Actions</th>
                        <th style="width: 150px;">Budget, USD</th>
                        @foreach (var month in timeline)
                        {
                            <th class="month-header" data-label="@month.Label"></th>
                        }


                    </tr>
                </thead>

                <tbody>
                    @foreach (var context in Response.OrderedItems)
                    {


                        <tr @onclick="() => OnSelectRow(context)" @ondblclick="() => OnEditLocalRow(context)">
                            <td class="fixed-column"><SimpleText IsBold="@context.HasSubTask" Text="@context.MainOrder.ToString()" /></td>
                            <td class="fixed-column"><SimpleText IsBold="@context.HasSubTask" Text="@context.WBS" /></td>
                            <td class="fixed-column"><SimpleText IsBold="@context.HasSubTask" Text="@context.Name" /></td>
                            <td class="fixed-column">
                                @if (EditLocalRow != null && EditLocalRow.Id == context.Id)
                                {
                                    <DatePicker @bind-Value="@context.StartDate"
                                                ValidateAsync="ValidateAsync"
                                                ChangePrior="ChangeStartDate"
                                                For="@(() => context.StartDate)" />
                                }
                                else
                                {
                                    <SimpleText IsBold="@context.HasSubTask" Text="@context.stringStartDate" />
                                }
                            </td>
                            <td class="fixed-column">
                                @if (EditLocalRow != null && EditLocalRow.Id == context.Id)
                                {
                                    <DatePicker Value="@context.EndDate"
                                                ValueChanged="ChangeEndDate"
                                                ValidateAsync="ValidateAsync"
                                                For="@(() => context.EndDate)" />
                                }
                                else
                                {
                                    <SimpleText IsBold="@context.HasSubTask" Text="@context.stringEndDate" />
                                }
                            </td>
                            <td>
                                @if (EditLocalRow != null && EditLocalRow.Id == context.Id)
                                {
                                    <TextField @bind-Value="@context.Duration"
                                               ValidateAsync="ValidateAsync"
                                               For="@(() => context.Duration)">
                                    </TextField>
                                }
                                else
                                {
                                    <SimpleText IsBold=@context.HasSubTask Text="@context.Duration"></SimpleText>
                                }
                            </td>

                            <td><SimpleText IsBold=@context.HasSubTask Text="@context.DependencyList"></SimpleText></td>
                            <td>
                                @if (EditLocalRow != null && EditLocalRow.Id == context.Id)
                                {
                                    <MudStack Row=true Spacing="2">
                                        <IconButton ToolTip="@($"Edit {context.Name}")" Size="@Size.Small"
                                                    Icon="@Icons.Material.Outlined.Save" OnClick="()=>Save()" />

                                        <IconButton ToolTip="@($"Cancel {context.Name}")" Size="@Size.Small"
                                                    Icon="@Icons.Material.Outlined.Cancel" OnClick="()=>CancelEditLocalRow(context)" />
                                    </MudStack>
                                }
                                else
                                {
                                    <MudStack Row=true Spacing="2">
                                        <IconButton ToolTip="@($"Edit {context.Name}")" Size="@Size.Small"
                                                    Icon="@Icons.Material.Outlined.Edit" OnClick="()=>Edit(context)" />

                                        <IconButton ToolTip="@($"Delete {context.Name}")" Size="@Size.Small"
                                                    Icon="@Icons.Material.Outlined.Delete" OnClick="()=>Delete(context)" />
                                    </MudStack>
                                }
                            </td>
                            <td><SimpleText IsBold=@context.HasSubTask Text="@context.BudgetAssignedUSDCurrency"></SimpleText></td>
                            @for (int i = 0; i < timeline.Count; i++)
                            {
                                if (context != null && i >= context.StartPositionIndex && i < context.StartPositionIndex + context.DurationInMonths)
                                {
                                    if (i == context.StartPositionIndex)
                                    {
                                        <td style="padding: 0; position: relative;">
                                            <div class="gantt-task-bar" style="left: 0;width:@(context.DurationInMonths * 80)px;">
                                                <span class="tooltip-gantt">
                                                    @context.Name
                                                    @context.StartDate!.Value.ToString("MMM yyyy") - @context.EndDate!.Value.ToString("MMM yyyy")
                                                </span>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td style="padding: 0;"></td>
                                    }
                                }
                                else
                                {
                                    <td style="padding: 0;"></td>
                                }
                            }




                        </tr>

                    }
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td><strong>@Response.OrderedItems.Sum(x => x.BudgetAssignedUSD).ToCurrencyCulture()</strong></td>
                        @for (int i = 0; i < timeline.Count; i++)
                        {
                            <td></td>
                        }
                    </tr>
                </tbody>
            </MudSimpleTable>
        }
    </div>
</MudContainer>

@code {

}