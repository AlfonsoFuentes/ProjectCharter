@using Shared.Models.FinishingLines.ProductionPlans

<MudStack>

    <TableTemplate TValue="ProductionPlanResponse"
                   AddNew="AddNew"
                   @bind-NameFilter=@nameFilter
                   DeleteGroup="DeleteGroup"
                   Items="FilteredItems"
                   @bind-SelectedItems=@SelecteItems
                   TableTitle="ProductionPlans List">
        <ColumnsTemplate>
            <SelectColumn T="ProductionPlanResponse" />
            <PropertyColumn Property="x => x.Name" Title="Name" TProperty="string" T="ProductionPlanResponse" />
            
            <TemplateColumn CellClass="d-flex justify-end" T="ProductionPlanResponse">
                <CellTemplate Context="template">
                    <MudStack Row=true Spacing="2">
                        <IconButton ToolTip="@($"Simulate {template.Item.Name}")" Size="@Size.Small" Icon="@Icons.Material.Outlined.Calculate" Variant=Variant.Outlined OnClick="@(() => Simulate(template.Item))" />
                        <IconButton ToolTip="@($"Edit {template.Item.Name}")" Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Variant=Variant.Outlined OnClick="@(() => Edit(template.Item))" />
                        <IconButton ToolTip="@($"Delete {template.Item.Name}")" Size="@Size.Small" Icon="@Icons.Material.Outlined.Remove" Variant=Variant.Outlined Color="Color.Surface" OnClick="@(() => Delete(template.Item))" />
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>

        </ColumnsTemplate>
    </TableTemplate>
    @if (SimulationData != null)
    {
        <SummarySimulation SimulationData="@SimulationData"></SummarySimulation>

    }
</MudStack>
@code {


}
