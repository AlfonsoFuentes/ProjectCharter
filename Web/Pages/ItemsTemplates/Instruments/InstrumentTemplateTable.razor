@page "/templates/instrument-templates"


<TableTemplate TValue="InstrumentTemplateResponse"
               AddNew="AddNew"
               ShowAdd=!ByParameter
               ShowDelete=!ByParameter
               @bind-NameFilter=@nameFilter
               DeleteGroup="DeleteGroup"
               Items="FilteredItems"
               @bind-SelectedItems=@SelecteItems
               >
    <ColumnsTemplate>
       
        @if (ByParameter)
        {
            <PropertyColumn Title="Tag Letter" Property="@(c => c.TagLetter)" T="InstrumentTemplateResponse" TProperty="string" />
        }
        else
        {
            <SelectColumn T="InstrumentTemplateResponse" />
            <PropertyColumn Title="Variable" Property="@(c => c.VariableInstrument.Name )" T="InstrumentTemplateResponse" TProperty="string" />
            <PropertyColumn Title="Modifier" Property="@(c => c.ModifierVariable.Name)" T="InstrumentTemplateResponse" TProperty="string" />
        }
        <PropertyColumn Title="Brand" Property="@(c => c.BrandName)" T="InstrumentTemplateResponse" TProperty="string" />
        <PropertyColumn Title="Model" Property="@(c => c.Model)" T="InstrumentTemplateResponse" TProperty="string" />
        <PropertyColumn Title="Diameter" Property="@(c => c.Diameter.Name)" T="InstrumentTemplateResponse" TProperty="string" />
        <PropertyColumn Title="Material" Property="@(c => c.Material.Name)" T="InstrumentTemplateResponse" TProperty="string" />
        <PropertyColumn Title="Connection" Property="@(c => c.ConnectionType.Name)" T="InstrumentTemplateResponse" TProperty="string" />
        
        <PropertyColumn Title="Signal" Property="@(c => c.SignalType.Name)" T="InstrumentTemplateResponse" TProperty="string" />
        <PropertyColumn Property="@(x => x.Value.ToCurrencyCulture())" Title="Value, USD " Sortable="false" T="InstrumentTemplateResponse" TProperty="string" />
        
        <TemplateColumn CellClass="d-flex justify-end" T="InstrumentTemplateResponse">
            <CellTemplate Context="template">
                <MudStack Row=true Spacing="2">
                    <IconButton ToolTip="@($"Edit {template.Item.Name}")" Size="@Size.Medium" Icon="@Icons.Material.Outlined.Edit" Variant=Variant.Outlined OnClick="@(()=>Edit(template.Item))" />

                    @if (!ByParameter)
                    {
                        <IconButton ToolTip="@($"Copy {template.Item.Name}")" Size="@Size.Medium" Icon="@Icons.Material.Outlined.ContentCopy" Variant=Variant.Outlined OnClick="@(()=>Copy(template.Item))" />
                        <IconButton ToolTip="@($"Delete {template.Item.Name}")" Size="@Size.Medium" Icon="@Icons.Material.Outlined.Delete" Variant=Variant.Outlined Color="Color.Surface" OnClick="@(()=>Delete(template.Item))" />
                    }
                    else
                    {
                        <IconButton ToolTip="@($"Send {template.Item.Name}")" Size="@Size.Medium" Icon="@Icons.Material.Outlined.Send"
                                    Variant=Variant.Outlined Color="Color.Surface" OnClick="@(()=>SendToForm.InvokeAsync(template.Item))" />
                    }

                </MudStack>
            </CellTemplate>
        </TemplateColumn>


    </ColumnsTemplate>
</TableTemplate>

@code {



}
